name: font-etl

volumes:
  fontdata:

services:
  ###############################################################################
  # 1️⃣  EXTRACT Adobe-VFR
  ###############################################################################
  extract-adobe:
    image: python:3.11-slim
    user: root
    volumes:
      - fontdata:/data
      - /tmp/kaggle.json:/root/.kaggle/kaggle.json:ro
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e
        pip install --no-cache-dir kaggle
        apt-get update && apt-get install -y unzip
        echo "[extract-adobe] Downloading Adobe VFR …"
        kaggle datasets download -d luisgoncalo/adobe-visual-font-recognition \
          -p /data/adobevfr
        echo "[extract-adobe] Adobe VFR downloaded."

        # check contents
        ls -l /data/adobevfr

###############################################################################
# 2️⃣  EXTRACT Google Fonts
###############################################################################
  extract-gfonts:
    image: alpine/git:latest
    volumes:
      - fontdata:/data
    working_dir: /data
    command:
      - sh
      - -c
      - |
        set -e
        echo "[extract-gfonts] Cloning Google Fonts …"
        git clone --depth 1 https://github.com/google/fonts.git GoogleFonts
        echo "[extract-gfonts] Done ⇒ $(du -sh GoogleFonts | cut -f1)"

###############################################################################
# 3️⃣  SYNTHETIC RENDER (optional profile: full)
###############################################################################
  synth-gen:
    image: python:3.11-slim
    volumes:
      - fontdata:/data
      - .:/workspace
    working_dir: /workspace
    command:
      - bash
      - -c
      - |
        set -e
        pip install --no-cache-dir pillow tqdm freetype-py
        echo "[synth-gen] Rendering PNGs …"
        python generate_synthetic_images.py \
          --fonts_dir /data/GoogleFonts \
          --out_dir  /data/Synthetic \
          --images_per_font 200
        echo "[synth-gen] Done ⇒ $(du -sh /data/Synthetic | cut -f1)"
    depends_on:
      extract-adobe:
        condition: service_completed_successfully
      extract-gfonts:
        condition: service_completed_successfully
    profiles: ["full"]

###############################################################################
# 4️⃣  LOAD into Swift (profile: full)
###############################################################################
  load-fonts:
    image: rclone/rclone:latest
    volumes:
      - fontdata:/data
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    environment:
      - RCLONE_CONTAINER=${RCLONE_CONTAINER:?err}
    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -e
        if [ -z "$RCLONE_CONTAINER" ]; then
          echo "ERROR: RCLONE_CONTAINER is not set"
          exit 1
        fi
        echo "[load] Syncing /data → chi_tacc:$RCLONE_CONTAINER …"
        rclone sync /data chi_tacc:$RCLONE_CONTAINER --progress \
          --transfers=32 --checkers=16 --multi-thread-streams=4 --fast-list
        echo "[load] Listing top-level dirs:"
        rclone lsd chi_tacc:$RCLONE_CONTAINER
    depends_on:
      synth-gen:
        condition: service_completed_successfully
    profiles: ["full"]
