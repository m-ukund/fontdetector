services:
  ###############################################################################
  # 1️⃣  EXTRACT Adobe-VFR
  ###############################################################################
  extract-adobe:
    image: python:3.11-slim
    user: root
    volumes:
      - fontdata:/data
      - /mnt/block/.kaggle/kaggle.json:/root/.kaggle/kaggle.json:ro
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e
        pip install --no-cache-dir kaggle
        apt-get update && apt-get install -y unzip
        echo "[extract-adobe] Downloading Adobe VFR..."
        kaggle datasets download -d luisgoncalo/adobe-visual-font-recognition -p /data/adobevfr
        echo "[extract-adobe] Adobe VFR .zip downloaded."
        ls -lh /data/adobevfr

  ###############################################################################
  # 2️⃣  EXTRACT Google Fonts
  ###############################################################################
  extract-gfonts:
    image: python:3.11-slim
    user: root
    volumes:
      - fontdata:/data
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e
        apt-get update && apt-get install -y git
        echo "[extract-gfonts] Cloning Google Fonts..."
        git clone --depth 1 https://github.com/google/fonts.git /data/GoogleFonts
        echo "[extract-gfonts] Google Fonts cloned."
        ls -lh /data/GoogleFonts

  ###############################################################################
  # 3️⃣  SYNTHETIC IMAGE GENERATION
  ###############################################################################
  synth-gen:
    build: ./synthetic
    volumes:
      - fontdata:/data
    command:
      - bash
      - -c
      - |
        set -e
        python3 /workspace/generate_synthetic_images.py \
          --fonts_dir /data/GoogleFonts \
          --out_dir  /data/Synthetic \
          --images_per_font 200
    depends_on:
      extract-adobe:
        condition: service_completed_successfully
      extract-gfonts:
        condition: service_completed_successfully
    profiles: ["full"]

  ###############################################################################
  # 4️⃣  LOAD DATA INTO OBJECT STORAGE
  ###############################################################################
  load-fonts:
    image: rclone/rclone:latest
    volumes:
      - fontdata:/data
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    environment:
      RCLONE_CONTAINER: ${RCLONE_CONTAINER}
    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -e
        if [ -z "$RCLONE_CONTAINER" ]; then
          echo "ERROR: RCLONE_CONTAINER is not set"
          exit 1
        fi
        echo "[load-fonts] Syncing /data to chi_tacc:$RCLONE_CONTAINER..."
        rclone sync /data chi_tacc:$RCLONE_CONTAINER --progress
        echo "[load-fonts] Listing container contents:"
        rclone lsd chi_tacc:$RCLONE_CONTAINER
    depends_on:
      synth-gen:
        condition: service_completed_successfully
    profiles: ["full"]

###############################################################################
# 5️⃣  VOLUMES
###############################################################################
volumes:
  fontdata:
    driver: local
    driver_opts:
      type: none
      device: /mnt/block
      o: bind
